# Listen on port 80 but always jump over to the secure server.
server {
    server_name %VIRTUALHOST%;
    listen 80;
    listen 443 ssl;
    root   /var/www/html;
    index  index.html;

    access_log /dev/stdout;
    error_log /dev/stdout;
    
    # Jump over to the HTTPS server if we're not there already.
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    # log_subrequest on

    ssl_certificate /tmp/ssl_cert.pem;
    ssl_certificate_key /tmp/ssl_key.pem;

    # If you have proxies, define them here.
    include /etc/nginx/proxy.d/*.conf;

    # Tested with https://www.ssllabs.com/ssltest/analyze.html?d=%VIRTUALHOST%
    # See https://weakdh.org/sysadmin.html
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;
    # generated with "openssl dhparam -out dhparams.pem 2048"
    ssl_dhparam /tmp/dhparams.pem;
}

