version: '3.7'
services:
  db:
    container_name: db4geoserver
    image: mdillon/postgis:11
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_PASSWORD: ${DB_ADMIN_PASSWORD}
      #POSTGRES_USER:
      #POSTGRES_DB:
      #POSTGRES_INITDB_ARGS:
      #POSTGRES_INITDB_XLOGDIR:
    volumes:
      - type: volume
        source: db_data
        target: /var/lib/postgresql/data

  geoserver:
    container_name: geoserver
    image: geoceg/geoserver:latest
    environment:
      GEOSERVER_DATA_DIR: /geoserver
    volumes:
      - type: volume
        source: geoserver_data
        target: /geoserver

  geowebcache:
    container_name: geowebcache4geoserver
    image: geoceg/geowebcache:latest
    environment:
      GEOWEBCACHE_DATA_DIR: /geowebcache
    volumes:
      - type: volume
        source: geowebcache_data
        target: /geowebcache
    
  pgadmin:
    container_name: pgadmin4geoserver
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      # Added SCRIPT_NAME to solve this problem: https://stackoverflow.com/questions/46381668/pgadmin4-wont-work-in-specific-location-behind-nginx
      SCRIPT_NAME: /pgadmin4
    volumes:
      - type: volume
        source: pgadmin_data
        target: /var/lib/pgadmin

  # Support full HTTP and HTTPS
  # Provides proxies for GeoServer, GeoWebCache, and PGadmin
  nginx:
    image: nginx
    command: /bin/bash -c "sed 's/%VIRTUALHOST%/${VIRTUALHOST}/' < /etc/nginx/conf.d/virtualhost.conf.template > /etc/nginx/conf.d/virtualhost.conf && nginx -g 'daemon off;'"
    container_name: nginx4geoserver
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - type: volume
        source: static_content
        target: /var/www/html/
      - type: bind
        source: ./virtualhost.conf.template
        target: /etc/nginx/conf.d/virtualhost.conf.template
      - type: bind
        source: ./proxy.d
        target: /etc/nginx/proxy.d
      - type: bind
        source: ${SSL_CERT}
        target: /tmp/ssl_cert.pem
      - type: bind
        source: ${SSL_KEY}
        target: /tmp/ssl_key.pem
      - type: bind
        source: ${SSL_DHPARAMS}
        target: /tmp/dhparams.pem
    depends_on:
      - geoserver
      - pgadmin

volumes:
  db_data:
    name: geoserver_postgis_data

  static_content:
    name: geoserver_static_content
    
  geoserver_data:
    name: geoserver_data
  
  geowebcache_data:
    name: geoserver_geowebcache_data
  
  pgadmin_data:
    name: geoserver_pgadmin_data

